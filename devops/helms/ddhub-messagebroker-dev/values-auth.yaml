# Default values for did-auth-proxy-helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
did-auth-proxy-helm:
  replicaCount: 1

  image:
    repository: aemoprivatecontainerregistry.azurecr.io/did-auth-proxy
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "canary"

  imagePullSecrets: 
    - name: regcred
  nameOverride: "did-auth-proxy-dev"
  fullnameOverride: "did-auth-proxy-dev"

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    annotations: 
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/server-snippet: |
        location = /health {
            proxy_pass http://ddhub-messagebroker.ddhub-dev.svc.cluster.local;
        }
        location ~ ^/(swagger-ui|q/openapi) {
            proxy_pass http://ddhub-messagebroker.ddhub-dev.svc.cluster.local;
        }
        location ~ / {
            auth_request /token_introspection;
            proxy_pass http://ddhub-messagebroker.ddhub-dev.svc.cluster.local;
        }
        location = /token_introspection {
              internal;
              proxy_method      GET;
              proxy_set_header  Authorization "$http_authorization";
              proxy_set_header  Content-Length "";
              proxy_pass        http://did-auth-proxy-dev.ddhub-dev.svc.cluster.local/auth/token-introspection;
        }
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: ddhub-dev.energyweb.org
        paths:
        - path: /auth
          pathType: Prefix
        - path: /auth/login
          pathType: Prefix
        - path: /auth/refresh-token
          pathType: Prefix
        - path: /auth/token-introspection
          pathType: Prefix
    tls: 
      - secretName: dsb-tls-secret
        hosts:
          - ddhub-dev.energyweb.org

  config:
    enabled: false
    secretRefName: {}
    configRefName: {}

  #for now dummy configs
  appValues:
    PORT: 80
    ACCEPTED_ROLES: user.roles.ddhub.apps.energyweb.iam.ewc
    JWT_ACCESS_TTL: 3600
    JWT_REFRESH_TTL: 86400

  opsValues:
    RPC_URL: https://volta-rpc.energyweb.org/
    CACHE_SERVER_URL: https://identitycache-dev.energyweb.org/v1
    REDIS_HOST: did-auth-proxy-dev-redis-master.ddhub-dev.svc
    REDIS_PORT: 6379

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  sealedSecret:
    enabled: true
    annotations: {}
    encryptedData: 
      CACHE_SERVER_LOGIN_PRVKEY: eab5e5ccb983fad7bf7f5cb6b475a7aea95eff0c6523291b0c0ae38b5855459c
      JWT_SECRET: asecretstring
      REDIS_PASSWORD: redis

########
# Redis

redis:
  architecture: standalone
  auth:
    existingSecret: did-auth-proxy-dev-sealedsecret
    existingSecretPasswordKey: REDIS_PASSWORD