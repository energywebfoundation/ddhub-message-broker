ddhub-messagebroker:
  # Default values for did-auth-proxy-helm.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.
  did-auth-proxy-helm:
    enabled: true
    replicaCount: 1

    image:
      repository: aemoprivatecontainerregistry.azurecr.io/did-auth-proxy
      pullPolicy: Always
      # Overrides the image tag whose default is the chart appVersion.
      tag: "canary"

    imagePullSecrets: 
      - name: regcred
    nameOverride: "did-auth-proxy-dev"
    fullnameOverride: "did-auth-proxy-dev"

    serviceAccount:
      # Specifies whether a service account should be created
      create: true
      # Annotations to add to the service account
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""

    podAnnotations: {}

    podSecurityContext: {}
      # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000

    service:
      type: ClusterIP
      port: 80

    ingress:
      enabled: true
      annotations: 
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/server-snippet: |
          location = /health {
              proxy_pass http://ddhub-messagebroker.ddhub-dev.svc.cluster.local;
          }
          location ~ ^/(swagger-ui|q/openapi) {
              proxy_pass http://ddhub-messagebroker.ddhub-dev.svc.cluster.local;
          }
          location ~ / {
              auth_request /token_introspection;
              proxy_pass http://ddhub-messagebroker.ddhub-dev.svc.cluster.local;
          }
          location = /token_introspection {
                internal;
                proxy_method      GET;
                proxy_set_header  Authorization "$http_authorization";
                proxy_set_header  Content-Length "";
                proxy_pass        http://did-auth-proxy-dev.ddhub-dev.svc.cluster.local/auth/token-introspection;
          }
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      hosts:
        - host: ddhub-dev.energyweb.org
          paths:
          - path: /auth
            pathType: Prefix
          - path: /auth/login
            pathType: Prefix
          - path: /auth/refresh-token
            pathType: Prefix
          - path: /auth/token-introspection
            pathType: Prefix
      tls: 
        - secretName: dsb-tls-secret
          hosts:
            - ddhub-dev.energyweb.org

    config:
      enabled: false
      secretRefName: {}
      configRefName: {}

    #for now dummy configs
    appValues:
      PORT: 80
      ACCEPTED_ROLES: user.roles.ddhub.apps.energyweb.iam.ewc,topiccreator.roles.ddhub.apps.energyweb.iam.ewc
      JWT_ACCESS_TTL: 3600
      JWT_REFRESH_TTL: 86400

    opsValues:
      RPC_URL: https://volta-rpc.energyweb.org/
      CACHE_SERVER_URL: https://identitycache-dev.energyweb.org/v1
      REDIS_HOST: ddhub-messagebroker-dev-redis-master.ddhub-dev.svc
      REDIS_PORT: 6379

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

    nodeSelector: {}

    tolerations: []

    affinity: {}

    sealedSecret:
      enabled: true
      annotations: {}
      encryptedData: 
        CACHE_SERVER_LOGIN_PRVKEY: AgAPn9kw6/EH2ZKOYdkw31qySyfGXC8yKTmMUpYgcr4Pg7ermdF83x8Zou0y9ZJSEJyWo4qQeXFsAY782SSEM5U06VdlcZWUGYEIBNbRX54vAt77Tj/v6H50XKlVcNUBEFyoxnpLZaVSrcw3YEhsR7s6wqfT5oCR/e9Xoa3XiUzxMJ1jtrap2ZMF/IdiT7jrTrB/38OFY3MpFm34ejURd5IBmXl3bxRyIC2K+d6jtPShwaARz+ovwGLqgSjwA7y1TUMsSRvlXQLJkGKqTVsrhPBJ1O4hYpSdB5ClZzMuilo5+HI+3msJdILl9h/kxdmBFHWoVx1uVvCcMkJ8w0vNrlBV/CaXZgCvXtdNrpfqYY7ZKYVeeJ7flXtZTkuYaYbkAtWkJQ+Sz8P+evsjUMzW2lfCiiRNlzAdP4ssha9A7+hVXQzXWxnD1gSBEJ99hUZNmsVx+hkhmVIziDm9r0NYbsBjlYUIaPLQRi/uFBKINHqTOlJry48jnqA7xoIJ1yUy0Tf3IPSL0TKgm8H96o6xV8GXy+QiY8GcF1MKvtluuCp9mU+jLglIydKkqyZTH8DRDFreFhYQ8JgOqXQxGVKqWQYm7l5vBzSEBkazXnWd5Cd57OlOH9HezPPhvjLxTjjUx+OabgKa0V57W8NKnYS+eWoZ3X4hxIR0CI+mYQMNZlKO8Ie5oPvHeMbWqLGqYUhys4iFPCqRLiYSGy3FJhjK350o44/kooX1w59mk5WTGaWXiGeZ2lnxLld+dqr/sgsVDzyReUucddPK8vt10kgUrCaR
        JWT_SECRET: AgBw/jWEvGm5NrFTpHn5xYL2unpbIsAJzS6WfQ2zZhHBF1R87YcU7T0cLNGMuAYQ2CTtk0TMG1uQFOCtg2pTmXnIvTnY2XyezII9M8KzXKUSaygcGEr2kAIe/bncPFzF+V/VJicg9snwH125HU8p6yyc2D/m5wUZR1FGUFS9iOCsFYiUCoIprEVeHEo76ay0C2cYwn4AvvVJy6Eq6UfC4V1M7DsPFVTDScy+jceltFWqo5Zq7PmWy52KC+aR6pGEYdFKNbCn25gOdQ0patuSdP270HN+ggqluw9uvTJ3gGRcZVMzc8KGzmcwcshr1cn+TNXq9UpB9KVqOf5zP3imjuvYCXCMuMmOX4X7MEJeh3oR2MNzSnQkZrT3q8lDGqNRmnKx7Rp/rofH7qBtU9VPwzMN5xBwxc0WE8f1k56RPmEGXCP7FNchgIQQnQmnpX+iZC9VE2ZW+AR1DyXVGwhxmUhrtMJCOkhRumDZlyVwyjPsbvbDoaVo/7Lk1ZBER58NaYgu5OOANacEPR3ZK3GU153aTt8bGh+qsPeKSq7aTIEnzKVWq5gjOKLTF+qrqAzAQ8kL8tDmmMlDW17r8ktmWkS71cwKaQy+Htd+cmHsTI11QZop7fTO9KkA8Vk6cnuqgEgfSYluddnq8wIIJUtXs9un2CeCGOqP2tmzsQ5q7MfyXWpsf2LhddJt2syk0IKO4FrwBOqbcqAdnA72rqZLpWtuX8cr
        REDIS_PASSWORD: AgBIHyerixwyz3/OD7cKjLDzGKrDg+i/VEsRMoJvmrNvB3hBtTs6EDU2FfsF5DjZaCeG7u2ll4rqOIyBwEspNS8DB8LsaJ2Cz+CKQ2QBpJhf9EEUyDi2FCqJJWP/GNLBalM7W8u9OI6uOLtseMJnDvMffjK7qDpKvyEWpkbABYAtGUtR4GWEyYz7zCZNSSugg4AB+BeQSmHwNaNtqimAoTSKY1jvnRIpPxtkbbqhKJuisjkFM9eM5UMnF/OMXkOf8YUK4ny31Gr2+YgNzs4kvz8hO/cSLAX/VoZBG6KkkwvnU2SkrzyYLHoXne+jo5rFRDgiK6h3JJsI3jJOZYrJd+ZjbKUPv4kEtGb5Lt6qDXYuIEiyt4DJtr26gjrxGzE/78jRBZFMu0UIKjlLy58lNuA5yW1m/uHjGy+uhzOi+EOnwi5QEU9UBPzlQdLW6mQeFD9Chizrw3aj0g+IIxT5ZWvlrPGKV+TkkNULMPs9jGncfOE2zaYVsWj0u2w1YB0jsDT0kQDb9L7CCGOcU6d4NBBcC5zzv3HIw1wU4HHgoW/SikBLSPxJOv8FN6BSx5Y7IY2GGAgutS10pheuQV9lhl8mxfLOBb+7dhcjjB4eMw4k8WE9aiZwn3RShotT32+A6ZRWm6if6qu/90uVnbAYYp2fTlPlEwcpYYgH/mXmingMtFZZ5EXa+iY2+LnXgWZHeVnCJFgL9wlrUE1RV3lg/DKVHA==

    ########
    # Redis

    redis:
      replica:
        replicaCount: 1
      auth:
        password: wonderfulpassword
