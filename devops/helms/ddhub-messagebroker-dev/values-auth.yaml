# Default values for did-auth-proxy-helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
did-auth-proxy-helm:
  replicaCount: 1

  image:
    repository: aemoprivatecontainerregistry.azurecr.io/did-auth-proxy
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "canary"

  imagePullSecrets: 
    - name: regcred
  nameOverride: "did-auth-proxy-dev"
  fullnameOverride: "did-auth-proxy-dev"

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    annotations: 
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/server-snippet: |
        location = /health {
            proxy_pass http://ddhub-messagebroker.ddhub-dev.svc.cluster.local;
        }
        location ~ ^/(swagger-ui|q/openapi) {
            proxy_pass http://ddhub-messagebroker.ddhub-dev.svc.cluster.local;
        }
        location ~ / {
            auth_request /token_introspection;
            proxy_pass http://ddhub-messagebroker.ddhub-dev.svc.cluster.local;
        }
        location = /token_introspection {
              internal;
              proxy_method      GET;
              proxy_set_header  Authorization "$http_authorization";
              proxy_set_header  Content-Length "";
              proxy_pass        http://did-auth-proxy-dev.ddhub-dev.svc.cluster.local/auth/token-introspection;
        }
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: ddhub-dev.energyweb.org
        paths:
        - path: /auth
          pathType: Prefix
        - path: /auth/login
          pathType: Prefix
        - path: /auth/refresh-token
          pathType: Prefix
        - path: /auth/token-introspection
          pathType: Prefix
    tls: 
      - secretName: dsb-tls-secret
        hosts:
          - ddhub-dev.energyweb.org

  config:
    enabled: false
    secretRefName: {}
    configRefName: {}

  #for now dummy configs
  appValues:
    PORT: 80
    ACCEPTED_ROLES: user.roles.ddhub.apps.energyweb.iam.ewc,topiccreator.roles.ddhub.apps.energyweb.iam.ewc
    JWT_ACCESS_TTL: 3600
    JWT_REFRESH_TTL: 86400

  opsValues:
    RPC_URL: https://volta-rpc.energyweb.org/
    CACHE_SERVER_URL: https://identitycache-dev.energyweb.org/v1
    REDIS_HOST: did-auth-proxy-dev-redis-master.ddhub-dev.svc
    REDIS_PORT: 6379

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  sealedSecret:
    enabled: true
    annotations: {}
    encryptedData: 
      CACHE_SERVER_LOGIN_PRVKEY: AgAPn9kw6/EH2ZKOYdkw31qySyfGXC8yKTmMUpYgcr4Pg7ermdF83x8Zou0y9ZJSEJyWo4qQeXFsAY782SSEM5U06VdlcZWUGYEIBNbRX54vAt77Tj/v6H50XKlVcNUBEFyoxnpLZaVSrcw3YEhsR7s6wqfT5oCR/e9Xoa3XiUzxMJ1jtrap2ZMF/IdiT7jrTrB/38OFY3MpFm34ejURd5IBmXl3bxRyIC2K+d6jtPShwaARz+ovwGLqgSjwA7y1TUMsSRvlXQLJkGKqTVsrhPBJ1O4hYpSdB5ClZzMuilo5+HI+3msJdILl9h/kxdmBFHWoVx1uVvCcMkJ8w0vNrlBV/CaXZgCvXtdNrpfqYY7ZKYVeeJ7flXtZTkuYaYbkAtWkJQ+Sz8P+evsjUMzW2lfCiiRNlzAdP4ssha9A7+hVXQzXWxnD1gSBEJ99hUZNmsVx+hkhmVIziDm9r0NYbsBjlYUIaPLQRi/uFBKINHqTOlJry48jnqA7xoIJ1yUy0Tf3IPSL0TKgm8H96o6xV8GXy+QiY8GcF1MKvtluuCp9mU+jLglIydKkqyZTH8DRDFreFhYQ8JgOqXQxGVKqWQYm7l5vBzSEBkazXnWd5Cd57OlOH9HezPPhvjLxTjjUx+OabgKa0V57W8NKnYS+eWoZ3X4hxIR0CI+mYQMNZlKO8Ie5oPvHeMbWqLGqYUhys4iFPCqRLiYSGy3FJhjK350o44/kooX1w59mk5WTGaWXiGeZ2lnxLld+dqr/sgsVDzyReUucddPK8vt10kgUrCaR
      JWT_SECRET: AgBw/jWEvGm5NrFTpHn5xYL2unpbIsAJzS6WfQ2zZhHBF1R87YcU7T0cLNGMuAYQ2CTtk0TMG1uQFOCtg2pTmXnIvTnY2XyezII9M8KzXKUSaygcGEr2kAIe/bncPFzF+V/VJicg9snwH125HU8p6yyc2D/m5wUZR1FGUFS9iOCsFYiUCoIprEVeHEo76ay0C2cYwn4AvvVJy6Eq6UfC4V1M7DsPFVTDScy+jceltFWqo5Zq7PmWy52KC+aR6pGEYdFKNbCn25gOdQ0patuSdP270HN+ggqluw9uvTJ3gGRcZVMzc8KGzmcwcshr1cn+TNXq9UpB9KVqOf5zP3imjuvYCXCMuMmOX4X7MEJeh3oR2MNzSnQkZrT3q8lDGqNRmnKx7Rp/rofH7qBtU9VPwzMN5xBwxc0WE8f1k56RPmEGXCP7FNchgIQQnQmnpX+iZC9VE2ZW+AR1DyXVGwhxmUhrtMJCOkhRumDZlyVwyjPsbvbDoaVo/7Lk1ZBER58NaYgu5OOANacEPR3ZK3GU153aTt8bGh+qsPeKSq7aTIEnzKVWq5gjOKLTF+qrqAzAQ8kL8tDmmMlDW17r8ktmWkS71cwKaQy+Htd+cmHsTI11QZop7fTO9KkA8Vk6cnuqgEgfSYluddnq8wIIJUtXs9un2CeCGOqP2tmzsQ5q7MfyXWpsf2LhddJt2syk0IKO4FrwBOqbcqAdnA72rqZLpWtuX8cr
      REDIS_PASSWORD: AgATlO7jFiAkaVwfRsPLVxWBYZxc4N0McJmhyfjZEW/amritRbU6fBoORfrxs2z6ke414/0POwXUgVAY1c0c7di5n4Nd+UvOVAxNasxgHWSaxHP/JCkc652nwl7PKupZ0oNlua0y32a3HWv0fwVtLiLiKW5bTejb/on318bA71tc5sXEw4hHduPxqV5tbIakpnfyBz8mv8uzJQQaw/TG2Zizv1AzzQZikAR9PBQoZLOxqBW8dG1RR85QHmV/ATgy21BNYNwmIkWL73xQwGyongvQLIKt489XF1sUjL0QICR0H0J4PhtCDbScZFrNr/y8GkkziuGpxFDLOSqSYr4S5aaFs1B9kxiTIP0g8yMtMEI1JDAWjQ+3XChu6M+VbTetLwgTFjDcJc/uO5N3GqHNQdNC9DfjgprdEaW5EyE5RQ4c2b1DBshBbDfFSWVRAAQ9lzrvvJNHZywtRE7hPpLpgfdp8mtv84jICfBA+boK6clEidTlJsQfGGvRywngY08Ws90NjrzGyhavbg4ExT/8ubhfVFQxOax/rDDLtl570Pj4xPyM6J7IZ2rA52WYtFO7G4xMrNgnVR9Rf7kKFMYQVsi8JKnPcNK+tGQDkcGMrWMo1/Gbj0VaQ4+NycyYLbMCgg6IIDbCfJ2KtZzx5NGIpvLX3GHzWwT2F1npS87df8ivdSQPK/J/3gCXEEd70AxYFdPlh4+8TTkKzncVQyZw74hCtg==

########
# Redis

redis:
  architecture: standalone
  auth:
    existingSecret: did-auth-proxy-dev-sealedsecret
    existingSecretPasswordKey: REDIS_PASSWORD